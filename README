greasy.js - a dependancy framework for JavaScript

Introduction


As a JavaScript application becomes more complicated, you can be faced with the challenge of a huge file. greasy.js aims to mitigate this by encouraging you to separate your application into separate components and allowing them to be dependent on other components.

Include greasy.js using the following

<script src=”jquery.js”></script>
<script src=”underscore.js”></script>

<script src=”greasy.js”></script>

Create a greasy object:
var greasy = new Greasy();
or
var greasy = Greasy.create();

Register your components with greasy

greasy.registerComponents(object);

Where object is a mapping of component-names to filenames. For example:

greasy.registerComponents({
	“Mammal”: “Mammel.js”,
	“Human”: “Human.js”
});

When a component is required, it will load the js file mapped to it.

To define a component:

greasy.defineComponent(name, options, callback);

name is the identifier that will be used to refer to the component

options is an object which may have any of the following:
require - array of other components that will be required
extend - a class that the class should extend on


the callback should return an object that will be the prototype for the component constructor.

	For example:

window.animalLibrary.greasy.defineComponent(
	"Mammal",
	function (imports) {
		"use strict";
		var $ = imports.$;

		return {
			hasSpine: function () {
				return true;
			},

			greeting: function () {
				return "Not sure...";
			},

			draw: function () {
				$(".animal").html("Mammal says " + 
this.greeting());
			}
		};
	}
);


API


Greasy Constructor	

Greasy.create(arguments)
	creates a Greasy object. Same as calling new Greasy(arguments)

GreasyObject

setImports(imports)
imports: object that is given to all callbacks in requireComponents and defineComponent.
Callbacks on requireComponents and defineComponent are given imports as an argument. This allows those functions to access variables that would otherwise have to be global. imports.greasy is always available for access to the greasy object.
	Example:
	// Provide access to jQuery and underscore objects
	greasy.setImports({
	    jQuery: jQuery,
	    _, _
	});

registerComponents(components)
components: object of component-names to the filenames that they are defined in. 
Register mappings of component-names to the filenames that they are defined in.
	Example:
greasy.registerComponents({
    “Mammal”: “Mammel.js”,
    “Human”: “Human.js”
});

get(componentName)
	Get the component constructor for the given component name.
	Example:
var Human = greasy.get(“Human”),
    mike = Human.create(“Mike”);

requireComponents(components, callback)
components: array of componentNames of components that will be required within the callback
	callback: function to be called once all components have loaded and executed
	Example:
	greasy.requireComponents(
[“Mammal”],
function (imports) {
	var greasy = imports.greasy,
		Mammal = greasy.get(“Mammal”),
		mammal = Mammal.create();
}
);

defineComponent(componentName, options, callback)
	componentName: name of the component that is to be defined
	options: object containing any of the following options
callback: function to be called once requirements have been fulfilled. Must return an object to be used as the prototype for the components constructor.

Example:
greasy.defineComponent(
    "Human",
    {
        require: ["Thumb"],
        extend: "Mammal"
    },
    function (imports) {
        "use strict";
        var $ = imports.$,
            greasy = imports.greasy,
            Thumb = greasy.get("Thumb"),
            thumb1 = Thumb.create({ name: "Thumb 1" }),
            thumb2 = Thumb.create({ name: "Thumb 2" });

        return {
            greeting: function () {
                return "Hello World!<br />" + thumb1.greeting() +
                    "<br />" + thumb2.greeting();
            },
            draw: function () {
                $(".animal").html(this.greeting());
            }
        };
    }
);

Dependancies

jQuery - http://jquery.com/
Underscore - documentcloud.github.com/underscore/ 

